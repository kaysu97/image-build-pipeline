name: 'github action for airflow image build'
on:
  workflow_dispatch:
  push:
    branches:
      - "image-build/**"
  # pull_request:
  #   types:
  #     - closed

env:
  IMAGE_REGISTRY: coolcool97
  # AIRFLOW_IMAGE_TAG: 2.4.3-python3.7
  # AIRFLOW_VERSION: 2.4.3
  # AIRFLOW_WORKER_IMAGE_TAG: slim-2.4.3-python3.7

jobs:
  Generate_Image_Tag:
    runs-on: ubuntu-latest
    outputs:
      image_list: ${{ steps.set-image-tag-matrix.outputs.image_list }}
    steps:
      - uses: actions/checkout@v3
      - name: Read Image Tag List
        id: set-image-tag-matrix
        working-directory: base
        run: |
          echo "image_list=$(cat base_image_list.txt)" >> $GITHUB_OUTPUT
          echo "image_list=$(cat base_image_list.txt)" >> $GITHUB_ENV
      - run: |
          echo "image_list: $image_list"
          
  Base_Image_Build_Push:
    needs: Generate_Image_Tag
    strategy:
      fail-fast: false
      matrix:
        image_tag: ${{fromJSON(needs.Generate_Image_Tag.outputs.image_list)}}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Generate ${{ matrix.image_tag }} Image Variables
        run: |
          ls
          echo "image tag: ${{ matrix.image_tag }}"
          strarr=($(echo "${{ matrix.image_tag }}" | sed 's/-/ /g'))
          len=$((${#strarr[*]}-3))
          sep_arr=${strarr[*]:2:len}
          file_name=$(echo "$sep_arr" | sed 's/ /-/g')
          echo "dockerfile=Dockerfile.$file_name" >> $GITHUB_ENV 
          echo "airflow_tag=$(echo ${strarr[*]::2} | sed 's/ /-/g')" >> $GITHUB_ENV
          echo "image tag: ${{ matrix.image_tag }}"
          echo "tag_python_version=${strarr[1]}" >> $GITHUB_ENV
      - run: |
          echo "dockerfile name: $dockerfile"
          echo "airflow tag: $airflow_tag"
          echo "tag python version: $tag_python_version"

      - name: ${{ matrix.image_tag }} Image Build
        working-directory: base
        run: |
          export BUILDKIT_PROGRESS=plain
          docker build . -f "$dockerfile" -t "$IMAGE_REGISTRY"/"airflow:${{ matrix.image_tag }}" \
          --build-arg AIRFLOW_IMAGE_TAG="$airflow_tag" \
          --build-arg TAG_PYTHON_VERSION="$tag_python_version"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          image-ref: "{{ env.$IMAGE_REGISTRY }}/airflow:${{ matrix.image_tag }}"
          # format: 'table'
          # exit-code: '1'
          # ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Login to Docker Hub Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: ${{ matrix.image_tag }} Image Push
        working-directory: base
        run: |
          docker push "$IMAGE_REGISTRY"/"airflow:${{ matrix.image_tag }}"